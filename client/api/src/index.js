/**
 * GoCard API
 * GoCard API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Body', 'model/Card', 'model/Member', 'model/MultipleValidationResponse', 'model/MultipleValidationResponseItems', 'model/Register', 'model/User', 'model/ValidationResponse', 'model/ValidationResponseErrors', 'api/CardsApi', 'api/MembersApi', 'api/PasswordsApi', 'api/RegistersApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Body'), require('./model/Card'), require('./model/Member'), require('./model/MultipleValidationResponse'), require('./model/MultipleValidationResponseItems'), require('./model/Register'), require('./model/User'), require('./model/ValidationResponse'), require('./model/ValidationResponseErrors'), require('./api/CardsApi'), require('./api/MembersApi'), require('./api/PasswordsApi'), require('./api/RegistersApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, Body, Card, Member, MultipleValidationResponse, MultipleValidationResponseItems, Register, User, ValidationResponse, ValidationResponseErrors, CardsApi, MembersApi, PasswordsApi, RegistersApi, UsersApi) {
  'use strict';

  /**
   * GoCard_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var GoCardApi = require('index'); // See note below*.
   * var xxxSvc = new GoCardApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new GoCardApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new GoCardApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new GoCardApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body: Body,
    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card: Card,
    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member: Member,
    /**
     * The MultipleValidationResponse model constructor.
     * @property {module:model/MultipleValidationResponse}
     */
    MultipleValidationResponse: MultipleValidationResponse,
    /**
     * The MultipleValidationResponseItems model constructor.
     * @property {module:model/MultipleValidationResponseItems}
     */
    MultipleValidationResponseItems: MultipleValidationResponseItems,
    /**
     * The Register model constructor.
     * @property {module:model/Register}
     */
    Register: Register,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The ValidationResponse model constructor.
     * @property {module:model/ValidationResponse}
     */
    ValidationResponse: ValidationResponse,
    /**
     * The ValidationResponseErrors model constructor.
     * @property {module:model/ValidationResponseErrors}
     */
    ValidationResponseErrors: ValidationResponseErrors,
    /**
     * The CardsApi service constructor.
     * @property {module:api/CardsApi}
     */
    CardsApi: CardsApi,
    /**
     * The MembersApi service constructor.
     * @property {module:api/MembersApi}
     */
    MembersApi: MembersApi,
    /**
     * The PasswordsApi service constructor.
     * @property {module:api/PasswordsApi}
     */
    PasswordsApi: PasswordsApi,
    /**
     * The RegistersApi service constructor.
     * @property {module:api/RegistersApi}
     */
    RegistersApi: RegistersApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
