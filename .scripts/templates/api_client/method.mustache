/**
 * {{&summary}}
 *
 * @param {object} parameters - method options and parameters
{{#parameters}}
 * @param {{=<% %>=}}{<%&type%>}<%={{ }}=%> parameters.{{&camelCaseName}} - {{&description}}
{{/parameters}}
 */
export function {{&methodName}}(parameters){
    if(parameters === undefined) {
        parameters = {};
    }
    let deferred = Q.defer();
    let domain = client.domain,  path = '{{&path}}';
    let body = {}, queryParameters = {}, headers = {}, form = {};

    {{#isSecure}}
        headers = client.setAuthHeaders(headers);
        queryParameters = client.setAuthQueryParams(queryParameters);
    {{/isSecure}}
    {{#headers}}
        headers['{{&name}}'] = [{{&value}}];
    {{/headers}}

    {{#parameters}}
        {{#isQueryParameter}}
            {{#isPatternType}}
                Object.keys(parameters).forEach(function(parameterName) {
                    if(new RegExp('{{&pattern}}').test(parameterName)){
                        queryParameters[parameterName] = parameters[parameterName];
                    }
                });
            {{/isPatternType}}
            {{#default}}
                /** set default value **/
                queryParameters['{{&name}}'] = {{&default}};
            {{/default}}

            {{^isPatternType}}
            if(parameters['{{&camelCaseName}}'] !== undefined){
                queryParameters['{{&name}}'] = parameters['{{&camelCaseName}}'];
            }
            {{/isPatternType}}
        {{/isQueryParameter}}

        {{#isPathParameter}}
            path = path.replace('{{=<% %>=}}{<%&name%>}<%={{ }}=%>', parameters['{{&camelCaseName}}']);
        {{/isPathParameter}}

        {{#isHeaderParameter}}
            if(parameters['{{&camelCaseName}}'] !== undefined){
                headers['{{&name}}'] = parameters['{{&camelCaseName}}'];
            }
        {{/isHeaderParameter}}

        {{#isBodyParameter}}
            if(parameters['{{&camelCaseName}}'] !== undefined){
                body = parameters['{{&camelCaseName}}'];
            }
        {{/isBodyParameter}}

         {{#isFormParameter}}
            if(parameters['{{&camelCaseName}}'] !== undefined){
                form['{{&name}}'] = parameters['{{&camelCaseName}}'];
            }
        {{/isFormParameter}}

        {{#required}}
        if(parameters['{{&camelCaseName}}'] === undefined){
            deferred.reject(new Error('Missing required {{&paramType}} parameter: {{&camelCaseName}}'));
            return deferred.promise;
        }
        {{/required}}

    {{/parameters}}
    queryParameters = mergeQueryParams(parameters, queryParameters);

    client.request('{{&methodName}}', '{{method}}', domain + path, parameters, body, headers, queryParameters, form, deferred);

    return deferred.promise;
}


