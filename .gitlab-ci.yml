# GitLab Continuous Integration

stages:
  - lint
  - test
  - build
  - bundle
  - dockerBuild

variables:
  GIT_STRATEGY: clone
  DOCKER_DRIVER: overlay

build:client:
  image: node
  stage: build
  tags:
    - docker
  only:
#    - master
  cache:
    key: "$CI_JOB_NAME/$CI_COMMIT_REF_NAME"
    paths:
      - node_modules/
  before_script:
    - yarn install
  script:
    - CI= yarn run build
    - |
        sed 's/>/>\n/g' Packages/Application/GoCardTeam.GoCardApi/Resources/Public/index.html | sed -r "s/_Resources\/Static\/Packages\/(.+\.[^\/\\\"]+)\/(.+?)\\\"(.+\".+\")/\{f\:uri\.resource(path\: '\2'\)}\\\"\3/" > Packages/Application/GoCardTeam.GoCardApi/Resources/Private/Templates/Standard/Index.html
  artifacts:
    name: '${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}'
    expire_in: 1 day
    paths:
      - Packages/Application/GoCardTeam.GoCardApi/Resources/Public/
      - Packages/Application/GoCardTeam.GoCardApi/Resources/Private/Templates/Standard/Index.html

build:flow:
  image: composer
  stage: build
  tags:
    - docker
  only:
#    - master
  cache:
    key: "$CI_JOB_NAME/$CI_COMMIT_REF_NAME"
    paths:
      - /composer/cache/
  before_script:
    - composer install
  script:
    - echo "Nothing to actually build"
  artifacts:
    name: '${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}'
    expire_in: 1 day
    paths:
      - Configuration/
      - Packages/
      - Web/
      - flow

build:bundle:
  image: alpine
  stage: bundle
  dependencies:
    - build:client
    - build:flow
  script:
    - echo Bundling client and server
  artifacts:
    name: '${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}'
    expire_in: 1 day
    paths:
      - Configuration/
      - Packages/
      - Web/
      - flow
      - docker-compose.production.yml

build_docker:
  image: docker:latest
  stage: dockerBuild
  tags:
    - docker
  only:
#    - master
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl
    - curl -L https://github.com/docker/compose/releases/download/1.15.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
  script:
    - /usr/local/bin/docker-compose -f .docker-compose.production.yml build
    - for img in $(docker images | grep ${PWD##*/} | awk '{ print $1 }'); do docker save $img -o image_$img; done;
  artifacts:
    name: '${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}'
    expire_in: 1 day
    paths:
      - image_*
      - docker-compose.production.yml